{
  "openapi": "3.0.0",
  "info": {
    "title": "Vehicle Vitals API",
    "version": "1.0.0",
    "description": "API documentation for Vehicle Vitals backend."
  },
  "servers": [
    { "url": "http://localhost:5000" }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["username", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered" },
          "400": { "description": "Error" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Error" },
          "404": { "description": "User not found" },
          "401": { "description": "Invalid password" }
        }
      }
    },
    "/api/vehicles": {
      "get": {
        "summary": "Get all vehicles",
        "responses": {
          "200": { "description": "List of vehicles" }
        }
      },
      "post": {
        "summary": "Create a vehicle",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "make": { "type": "string" },
                  "model": { "type": "string" },
                  "year": { "type": "integer" },
                  "vin": { "type": "string" },
                  "userId": { "type": "integer" }
                },
                "required": ["make", "model", "year", "vin", "userId"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Vehicle created" },
          "400": { "description": "Error" }
        }
      }
    },
    "/api/vehicles/{id}": {
      "get": {
        "summary": "Get vehicle by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Vehicle found" },
          "404": { "description": "Not found" }
        }
      },
      "put": {
        "summary": "Update vehicle by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "make": { "type": "string" },
                  "model": { "type": "string" },
                  "year": { "type": "integer" },
                  "vin": { "type": "string" },
                  "userId": { "type": "integer" }
                },
                "required": ["make", "model", "year", "vin", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Vehicle updated" },
          "400": { "description": "Error" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "summary": "Delete vehicle by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Vehicle deleted" },
          "404": { "description": "Not found" }
        }
      }
    }
  }
} 